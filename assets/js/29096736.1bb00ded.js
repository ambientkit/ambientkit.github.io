"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4324],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},l=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),g=u(n),m=a,d=g["".concat(c,".").concat(m)]||g[m]||p[m]||o;return n?r.createElement(d,s(s({ref:t},l),{},{components:n})):r.createElement(d,s({ref:t},l))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=g;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var u=2;u<o;u++)s[u]=n[u];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},6159:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return c},metadata:function(){return u},toc:function(){return l},default:function(){return g}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),s=["components"],i={},c="Storage System",u={unversionedId:"plugins/storage",id:"plugins/storage",title:"Storage System",description:"A storage system stores the web app settings (title, content, scheme, URL, etc.) as well as plugin status (enabled/disabled), settings, and permissions granted.",source:"@site/docs/plugins/storage.md",sourceDirName:"plugins",slug:"/plugins/storage",permalink:"/docs/docs/plugins/storage",editUrl:"https://github.com/ambientkit/docs/tree/main/packages/create-docusaurus/templates/shared/docs/plugins/storage.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Logger",permalink:"/docs/docs/plugins/logger"},next:{title:"Session Manager",permalink:"/docs/docs/plugins/session"}},l=[],p={toc:l};function g(e){var t=e.components,n=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"storage-system"},"Storage System"),(0,o.kt)("p",null,"A ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/ambientkit/plugin/blob/main/storage/gcpbucketstorage/gcpbucketstorage.go"},"storage system")," stores the web app settings (title, content, scheme, URL, etc.) as well as plugin status (enabled/disabled), settings, and permissions granted."),(0,o.kt)("p",null,"The storage system plugin must include the MVP code as well as the ",(0,o.kt)("inlineCode",{parentName:"p"},"Storage()")," function."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'// Storage returns data and session storage.\nfunc (p *Plugin) Storage(logger ambient.Logger) (ambient.DataStorer, ambient.SessionStorer, error) {\n    // Load the bucket from the environment variable.\n    bucket := os.Getenv(BucketEnv)\n    if len(bucket) == 0 {\n        return nil, nil, fmt.Errorf("%v: environment variable, %v, is missing", p.PluginName(), BucketEnv)\n    }\n\n    ds := store.NewGCPStorage(bucket, p.sitePath)\n    ss := store.NewGCPStorage(bucket, p.sessionPath)\n\n    return ds, ss, nil\n}\n')),(0,o.kt)("p",null,"The function should return objects that satisfy the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/ambientkit/ambient/blob/main/ambient_datastorer.go"},(0,o.kt)("inlineCode",{parentName:"a"},"DataStorer"))," interface and the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/ambientkit/ambient/blob/main/ambient_sessionstorer.go"},(0,o.kt)("inlineCode",{parentName:"a"},"SessionStorer"))," interface. Notice you don't have to worry about the type of data. This makes it easy to read or write to any medium."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},"// DataStorer reads and writes data to an object.\ntype DataStorer interface {\n    Save([]byte) error\n    Load() ([]byte, error)\n}\n\n// SessionStorer reads and writes data to an object.\ntype SessionStorer interface {\n    Save([]byte) error\n    Load() ([]byte, error)\n}\n")))}g.isMDXComponent=!0}}]);