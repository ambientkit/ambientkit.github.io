"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3087],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return f}});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var u=a.createContext({}),o=function(e){var n=a.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=o(e.components);return a.createElement(u.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,s=e.originalType,u=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=o(t),f=r,d=m["".concat(u,".").concat(f)]||m[f]||c[f]||s;return t?a.createElement(d,i(i({ref:n},p),{},{components:t})):a.createElement(d,i({ref:n},p))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var s=t.length,i=new Array(s);i[0]=m;var l={};for(var u in n)hasOwnProperty.call(n,u)&&(l[u]=n[u]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var o=2;o<s;o++)i[o]=t[o];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},6198:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return u},metadata:function(){return o},toc:function(){return p},default:function(){return m}});var a=t(7462),r=t(3366),s=(t(7294),t(3905)),i=["components"],l={},u="FuncMaps",o={unversionedId:"plugins/funcmaps",id:"plugins/funcmaps",title:"FuncMaps",description:"FuncMaps are how you can call functions in HTML templates to return data. They are a map of functions that can take in parameters. You can read more about them with examples here.",source:"@site/docs/plugins/funcmaps.md",sourceDirName:"plugins",slug:"/plugins/funcmaps",permalink:"/docs/plugins/funcmaps",editUrl:"https://github.com/ambientkit/ambientkit.github.io/blob/main/docs/plugins/funcmaps.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Assets",permalink:"/docs/plugins/assets"},next:{title:"Enable & Disable",permalink:"/docs/plugins/enable"}},p=[{value:"Global Functions",id:"global-functions",children:[],level:2},{value:"Namespaces",id:"namespaces",children:[],level:2},{value:"FuncMaps in Assets",id:"funcmaps-in-assets",children:[],level:2}],c={toc:p};function m(e){var n=e.components,t=(0,r.Z)(e,i);return(0,s.kt)("wrapper",(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"funcmaps"},"FuncMaps"),(0,s.kt)("p",null,"FuncMaps are how you can call functions in HTML templates to return data. They are a map of functions that can take in parameters. You can read more about them with examples ",(0,s.kt)("a",{parentName:"p",href:"https://pkg.go.dev/text/template#FuncMap"},"here"),"."),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"FuncMap()")," function should return a callable function that accepts an http.Request and then returns a ",(0,s.kt)("inlineCode",{parentName:"p"},"template.FuncMap"),". The reason it accepts a request is sometimes information around the current user or request is needed by the functions."),(0,s.kt)("p",null,"Below is an example of how to define a FuncMap."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-go"},'// FuncMap returns a callable function that accepts a request.\nfunc (p *Plugin) FuncMap() func(r *http.Request) template.FuncMap {\n    return func(r *http.Request) template.FuncMap {\n        fm := make(template.FuncMap)\n        fm["disqus_PageURL"] = func() string {\n            return r.URL.Path\n        }\n\n        return fm\n    }\n}\n')),(0,s.kt)("p",null,"Your handler should pass in ",(0,s.kt)("inlineCode",{parentName:"p"},"p.FuncMap()")," so the template can use it."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="plugin_route.go"',title:'"plugin_route.go"'},'func (p *Plugin) welcomeView(w http.ResponseWriter, r *http.Request) (status int, err error) {\n    vars := make(map[string]interface{})\n    vars["title"] = "Welcome"\n    return p.Render.Page(w, r, assets, "template/view", p.FuncMap(), vars)\n}\n')),(0,s.kt)("p",null,"You can then call the FuncMap in a template."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-html",metastring:'title="template/view.html"',title:'"template/view.html"'},"<h1>{{.title}}</h1>\n<p>The page URL is: {{disqus_PageURL}}</p>\n")),(0,s.kt)("h2",{id:"global-functions"},"Global Functions"),(0,s.kt)("p",null,"These functions are always available in templates so don't try to overwrite them."),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"URLPrefix")," returns the ",(0,s.kt)("inlineCode",{parentName:"p"},"AMB_URL_PREFIX")," environment variable. Here is an example of how you would use it:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-html"},'<a href="{{URLPrefix}}/dashboard/posts/new">New post</a>\n')),(0,s.kt)("h2",{id:"namespaces"},"Namespaces"),(0,s.kt)("p",null,"FuncMaps are global which means all of the maps are combined before rendering the template. To prevent collisions, each function must have a key that is prefixed with the name of the plugin. For instance, for the ",(0,s.kt)("inlineCode",{parentName:"p"},"disqus")," plugin, all FuncMaps should start with ",(0,s.kt)("inlineCode",{parentName:"p"},"disqus_"),"."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-go"},'fm["disqus_PageURL"] = func() string {\n    return r.URL.Path\n}\n')),(0,s.kt)("p",null,"If the key does not include the prefix of the plugin, Ambient will automatically add the prefix (",(0,s.kt)("inlineCode",{parentName:"p"},"disqus_*"),") so it's a best practice to include it for consistency."),(0,s.kt)("h2",{id:"funcmaps-in-assets"},"FuncMaps in Assets"),(0,s.kt)("p",null,"You can also use FuncMaps in the ",(0,s.kt)("a",{parentName:"p",href:"/docs/plugins/assets"},(0,s.kt)("inlineCode",{parentName:"a"},"Assets()"))," function since they are parsed as HTML templates."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-go"},'// Assets returns a list of assets and an embedded filesystem.\nfunc (p *Plugin) Assets() ([]ambient.Asset, *embed.FS) {\n    arr := make([]ambient.Asset, 0)\n\n    arr = append(arr, ambient.Asset{\n        Filetype:   ambient.AssetGeneric,\n        Location:   ambient.LocationHead,\n        TagName:    "link",\n        ClosingTag: false,\n        Attributes: []ambient.Attribute{\n            {\n                Name:  "rel",\n                Value: "canonical",\n            },\n            {\n                Name:  "href",\n                Value: `{{if .canonical}}{{.canonical}}{{else}}{{bearblog_PageURL}}{{end}}`,\n            },\n        },\n    })\n\n    return arr, &assets\n}\n\n// FuncMap returns a callable function that accepts a request.\nfunc (p *Plugin) FuncMap() func(r *http.Request) template.FuncMap {\n    return func(r *http.Request) template.FuncMap {\n        fm := make(template.FuncMap)\n        fm["bearblog_PageURL"] = func() string {\n            siteURL, err := p.Site.FullURL()\n            if err != nil {\n                p.Log.Warn("bearblog: error getting site URL: %v", err.Error())\n            }\n\n            return path.Join(siteURL, r.URL.Path)\n        }\n\n        return fm\n    }\n}\n')))}m.isMDXComponent=!0}}]);