"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9181],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return m}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),u=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=u(e.components);return r.createElement(s.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},g=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),g=u(t),m=a,b=g["".concat(s,".").concat(m)]||g[m]||c[m]||i;return t?r.createElement(b,o(o({ref:n},p),{},{components:t})):r.createElement(b,o({ref:n},p))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=g;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var u=2;u<i;u++)o[u]=t[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}g.displayName="MDXCreateElement"},355:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return p},default:function(){return g}});var r=t(7462),a=t(3366),i=(t(7294),t(3905)),o=["components"],l={},s="Barebones App",u={unversionedId:"architecture/barebones",id:"architecture/barebones",title:"Barebones App",description:"Follow these steps to create a barebones Ambient app. These steps are intentionally verbose to help with the understanding.",source:"@site/docs/architecture/barebones.md",sourceDirName:"architecture",slug:"/architecture/barebones",permalink:"/docs/architecture/barebones",editUrl:"https://github.com/ambientkit/ambientkit.github.io/blob/main/docs/architecture/barebones.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Session Manager",permalink:"/docs/architecture/session"},next:{title:"Plugins",permalink:"/docs/plugins/overview"}},p=[],c={toc:p};function g(e){var n=e.components,t=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"barebones-app"},"Barebones App"),(0,i.kt)("p",null,"Follow these steps to create a barebones Ambient app. These steps are intentionally verbose to help with the understanding."),(0,i.kt)("p",null,"Create a few folders."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir -p myapp/storage\n")),(0,i.kt)("p",null,"Change to the ",(0,i.kt)("inlineCode",{parentName:"p"},"myapp")," folder."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"cd myapp\n")),(0,i.kt)("p",null,"Initialize the Go module. You should swap out username for your GitHub username."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"go mod init github.com/username/ambapp\n")),(0,i.kt)("p",null,"Create the site file where the app configuration will be stored."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"touch storage/site.bin\n")),(0,i.kt)("p",null,"Create the session file where the user sessions will be stored."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"touch storage/session.bin\n")),(0,i.kt)("p",null,"Create an environment variable file to hold the session key for the Session Manager."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"touch .env\n")),(0,i.kt)("p",null,"In the ",(0,i.kt)("inlineCode",{parentName:"p"},".env")," file, paste in the line starting with ",(0,i.kt)("inlineCode",{parentName:"p"},"AMB_SESSION_KEY")," from the output of this program (click ",(0,i.kt)("inlineCode",{parentName:"p"},"Run"),"): ",(0,i.kt)("a",{parentName:"p",href:"https://go.dev/play/p/PdQcNiw4WFz"},"https://go.dev/play/p/PdQcNiw4WFz")),(0,i.kt)("p",null,"Create a main.go file."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="main.go"',title:'"main.go"'},'package main\n\nimport (\n    "log"\n    "os"\n\n    "github.com/ambientkit/ambient"\n    "github.com/ambientkit/ambient/pkg/ambientapp"\n    "github.com/ambientkit/ambient/pkg/envdetect"\n    "github.com/ambientkit/plugin/logger/zaplogger"\n    "github.com/ambientkit/plugin/router/awayrouter"\n    "github.com/ambientkit/plugin/sessionmanager/scssession"\n    "github.com/ambientkit/plugin/storage/localstorage"\n    "github.com/ambientkit/plugin/templateengine/htmlengine"\n    "github.com/joho/godotenv"\n)\n\nfunc main() {\n    // Load the .env file if AMB_DOTENV=true.\n    if envdetect.LoadDotEnv() {\n        err := godotenv.Load()\n        if err != nil {\n            log.Fatalf("app: error loading .env file: %v\\n", err.Error())\n        }\n    }\n\n    // Create the ambient app.\n    plugins := Plugins()\n    ambientApp, logger, err := ambientapp.NewApp("myapp", "1.0",\n        zaplogger.New(),\n        ambient.StoragePluginGroup{\n            Storage: localstorage.New("storage/site.bin", "storage/session.bin"),\n        },\n        plugins)\n    if err != nil {\n        log.Fatalln(err.Error())\n    }\n\n    // Load the plugins and return the handler.\n    mux, err := ambientApp.Handler()\n    if err != nil {\n        logger.Fatal(err.Error())\n    }\n\n    // Start the web listener.\n    ambientApp.ListenAndServe(mux)\n}\n\n// Plugins defines the plugins.\nfunc Plugins() *ambient.PluginLoader {\n    // Get the environment variables.\n    secretKey := os.Getenv("AMB_SESSION_KEY")\n    if len(secretKey) == 0 {\n        log.Fatalf("app: environment variable missing: %v\\n", "AMB_SESSION_KEY")\n    }\n\n    // Define the session manager so it can be used as a core plugin and\n    // middleware.\n    sessionManager := scssession.New(secretKey)\n\n    return &ambient.PluginLoader{\n        // Core plugins are implicitly trusted.\n        Router:         awayrouter.New(nil),\n        TemplateEngine: htmlengine.New(),\n        SessionManager: sessionManager,\n        // Trusted plugins are those that are typically needed to boot so they\n        // will be enabled and given full access.\n        TrustedPlugins: map[string]bool{\n            "hello": true,\n        },\n        Plugins: []ambient.Plugin{\n            NewHelloPlugin(),\n        },\n        Middleware: []ambient.MiddlewarePlugin{\n            // Middleware - executes bottom to top.\n            sessionManager, // Session manager middleware.\n        },\n    }\n}\n')),(0,i.kt)("p",null,"Create a hello.go file."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go",metastring:'title="hello.go"',title:'"hello.go"'},'package main\n\nimport (\n    "net/http"\n\n    "github.com/ambientkit/ambient"\n)\n\n// Plugin represents an Ambient plugin.\ntype Plugin struct {\n    *ambient.PluginBase\n}\n\n// NewHelloPlugin returns a new hello plugin.\nfunc NewHelloPlugin() *Plugin {\n    return &Plugin{\n        PluginBase: &ambient.PluginBase{},\n    }\n}\n\n// PluginName returns the plugin name.\nfunc (p *Plugin) PluginName() string {\n    return "hello"\n}\n\n// PluginVersion returns the plugin version.\nfunc (p *Plugin) PluginVersion() string {\n    return "1.0.0"\n}\n\n// GrantRequests returns a list of grants requested by the plugin.\nfunc (p *Plugin) GrantRequests() []ambient.GrantRequest {\n    return []ambient.GrantRequest{\n        {Grant: ambient.GrantRouterRouteWrite, Description: "Access to create default route."},\n    }\n}\n\n// Routes sets routes for the plugin.\nfunc (p *Plugin) Routes() {\n    p.Mux.Get("/", func(w http.ResponseWriter, r *http.Request) (err error) {\n        return p.Toolkit.JSON(w, http.StatusOK, map[string]interface{}{\n            "message": "hello world!",\n        })\n    })\n}\n')),(0,i.kt)("p",null,"Download the dependencies - you can remove the last argument if running less than Go 1.17."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"go mod tidy -compat=1.17\n")),(0,i.kt)("p",null,"Start the app. ",(0,i.kt)("inlineCode",{parentName:"p"},"AMB_DOTENV=true")," tells the app to load the session key from the ",(0,i.kt)("inlineCode",{parentName:"p"},".env")," file."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"AMB_DOTENV=true go run .\n")),(0,i.kt)("p",null,"You should be able to access the app at: http://localhost:8080"),(0,i.kt)("p",null,"Your browser will output this message if everything was successful: ",(0,i.kt)("inlineCode",{parentName:"p"},'{"message":"hello world!"}')))}g.isMDXComponent=!0}}]);