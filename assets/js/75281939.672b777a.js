"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3101],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),d=i,f=u["".concat(s,".").concat(d)]||u[d]||m[d]||r;return n?a.createElement(f,o(o({ref:t},c),{},{components:n})):a.createElement(f,o({ref:t},c))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var p=2;p<r;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},1291:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return c},default:function(){return u}});var a=n(7462),i=n(3366),r=(n(7294),n(3905)),o=["components"],l={},s="Template Engine",p={unversionedId:"architecture/template-engine",id:"architecture/template-engine",title:"Template Engine",description:"The template engine is what parses, modifies, and organizes HTML content before it's sent back to the requesting client. It provides a lot of the extensibility that makes the Ambient plugin architecture possible. If you are returning JSON or XML, you won't need to use the template engine.",source:"@site/docs/architecture/template-engine.md",sourceDirName:"architecture",slug:"/architecture/template-engine",permalink:"/docs/architecture/template-engine",editUrl:"https://github.com/ambientkit/ambientkit.github.io/blob/main/docs/architecture/template-engine.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Router",permalink:"/docs/architecture/router"},next:{title:"Session Manager",permalink:"/docs/architecture/session"}},c=[],m={toc:c};function u(e){var t=e.components,n=(0,i.Z)(e,o);return(0,r.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"template-engine"},"Template Engine"),(0,r.kt)("p",null,"The template engine is what parses, modifies, and organizes HTML content before it's sent back to the requesting client. It provides a lot of the extensibility that makes the Ambient plugin architecture possible. If you are returning JSON or XML, you won't need to use the template engine."),(0,r.kt)("p",null,"The template engine plugin, ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/ambientkit/plugin/tree/main/templateengine/htmlengine"},"htmlengine"),", uses the Go standard library, ",(0,r.kt)("a",{parentName:"p",href:"https://pkg.go.dev/html/template"},(0,r.kt)("inlineCode",{parentName:"a"},"html/template")),", and provides a few nice features:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"template buffering through ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/oxtoacart/bpool"},(0,r.kt)("inlineCode",{parentName:"a"},"oxtoacart/bpool"))," - this allows template errors to be caught before returning them to the client"),(0,r.kt)("li",{parentName:"ul"},"isolated template parsing - parses plugin template separately so they don't conflict or have access to other plugin information"),(0,r.kt)("li",{parentName:"ul"},"embedded filesystem using ",(0,r.kt)("a",{parentName:"li",href:"https://pkg.go.dev/embed"},(0,r.kt)("inlineCode",{parentName:"a"},"embed.FS"))," - all plugins that serve content can have files embedded for single binary web deployments"),(0,r.kt)("li",{parentName:"ul"},"template escaping by default"),(0,r.kt)("li",{parentName:"ul"},"template debugging that can be enabled to show which plugins have modified which blocks of HTML"),(0,r.kt)("li",{parentName:"ul"},"templates will throw an error if they are ",(0,r.kt)("a",{parentName:"li",href:"https://pkg.go.dev/text/template#Template.Option"},"missing keys")," - you can disable by passing in a var like this: ",(0,r.kt)("inlineCode",{parentName:"li"},'vars["amb.option"]="missingkey=default"')),(0,r.kt)("li",{parentName:"ul"},"template vars will be marshalled to JSON and then back to a ",(0,r.kt)("inlineCode",{parentName:"li"},"map[string]interface{}")," to ensure there are consistencies between standard plugins and gRPC plugins - this affects non-primitive types like ",(0,r.kt)("inlineCode",{parentName:"li"},"time.Time")," because it will be stored as a string so if you're modifying using FuncMaps, you need to accept a string, then do a parse like this: ",(0,r.kt)("inlineCode",{parentName:"li"},"time.Parse(time.RFC3339, t)"))),(0,r.kt)("p",null,"The template engine also accepts an ",(0,r.kt)("inlineCode",{parentName:"p"},"AssetInjector")," from Ambient which is extremely powerful and gives plugins the ability to:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"add routes to serve static files like CSS and JavaScript from the embedded filesystem"),(0,r.kt)("li",{parentName:"ul"},"embed CSS and JavaScript"),(0,r.kt)("li",{parentName:"ul"},"inject HTML tags or elements to the ",(0,r.kt)("inlineCode",{parentName:"li"},"head"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"header"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"main"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"body"),", and ",(0,r.kt)("inlineCode",{parentName:"li"},"footer")," sections of a ",(0,r.kt)("inlineCode",{parentName:"li"},"Page")," or ",(0,r.kt)("inlineCode",{parentName:"li"},"Post")),(0,r.kt)("li",{parentName:"ul"},"inject HTML templates or strings into a ",(0,r.kt)("inlineCode",{parentName:"li"},"Page")," or ",(0,r.kt)("inlineCode",{parentName:"li"},"Post")),(0,r.kt)("li",{parentName:"ul"},"inject plugin ",(0,r.kt)("inlineCode",{parentName:"li"},"Settings")," into strings or HTML templates using ",(0,r.kt)("a",{parentName:"li",href:"/docs/plugins/funcmaps"},(0,r.kt)("inlineCode",{parentName:"a"},"funcmaps")))),(0,r.kt)("p",null,"You can see examples of injecting assets ",(0,r.kt)("a",{parentName:"p",href:"/docs/plugins/assets"},"here"),"."))}u.isMDXComponent=!0}}]);